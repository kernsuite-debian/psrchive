Pulsar Ephemeris I/O Routines 
-----------------------------
  This file documents a pair of Fortran routines written to standardise
the format and use of pulsar ephemeris files. These are called rd_eph 
and wr_eph.

  These routines are designed to work with input/output files of Tempo
V11.0, and with the format of ephemeris file output by new and old
versions of 'psrinfo' from the Taylor, Manchester and Lyne catalogue
data.  Files output by wr_eph are compatible with Tempo V11.0 and it is
recommended that this format be used in place of all other ephemeris
formats henceforth.

The Ephemeris File Format 
-------------------------
  Ephemeris files are ASCII UNIX text files. Each line specifies a
parameter of the pulsar. Lines are of the following form:

<keyword> <value> [<fit flag>] [<error>] [#<comment>]

  The keyword specifies the name of the parameter. See below for
information about keywords. The fit flag is used by Tempo to ascertain
which parameters it is required to fit. Fit flags are not output by
wr_eph. A fit flag of zero has the same meaning as an absent fit
flag. Input lines beginning with 'C ' or '#' are considered comments
and are ignored.

  Real values on input may be any string understood by Fortran 'd'
format conversion, and on output currently consist of '1p,d' format
numbers of a specific length for human-readable formatting. Some
modifications to this would be desirable but entirely cosmetic, such as
use of exponential notation only when the exponent falls outside, say,
[-6,6], and the rounding of values to avoid things like
"3.49999999999999999999" when "3.5" is meant.

Parameters and Keywords 
-----------------------
  The available pulsar parameters (identified by their keywords) are
defined in the file 'keys.dat'. This file is extensively commented and
should be referred to for more information. Basically, this file allows
easy specification and modification of the set of pulsar parameters.
For backward compatibility, present parameters should not be changed
(once the initial set is finalised), however new parameters may be
added at will at any point in the file. After such a change,
recompilation of the I/O routines and programs using these routines
will make everything work. The order of appearance of parameters in
this file determines the order in which wr_eph will output known
parameters of a pulsar. Any parameters with multiple keywords
(e.g. 'NAME' for old files and 'PSR' for new files) may be handled
by adding a condition to the isAlias function in 'ephio.f'.

  The C program 'keys2fort' parses this file and produces
'keyinfo.com', a file 'include'd by the Fortran I/O routines.

Arguments to rd_eph and wr_eph 
---------------------------------
  At present there are 107 pulsar parameters. To handle this large
number, arguments to these functions are arrays, with a given index
into an array corresponding to a given parameter. The index value for a
parameter is determined by its position in 'keys.dat'. A Fortran
"parameter" (constant) is defined for each parameter, giving its index
value: for example "parameter (EPH_RAJ = 2)" (see keyinfo.com).  These
constants should always be used rather than actual index numbers
because future changes to keys.dat could alter the actual value of the
constants.

  Arguments to rd_eph and wr_eph consist of the name of the file to
read/write, an array specifying the status of each possible parameter
(unknown, known or known&fit), three arrays for storing values of
parameters of different data types (strings, integers, and reals, or
combinations of these), and an array of real-valued errors.  For
wr_eph, of course, these arrays specify what to write out, whilst for
rd_eph they are locations in which data is stored after being input.
Zero errors mean the error is not known (in which case, writeph will
not write an error).  See comments at the top of ephio.f for actual
types of the arguments.

Conventions
-----------
  Position coordinates are referenced to the J2000.0 epoch. Any input
with keywords 'RA' or 'DEC' (rather than 'RAJ' or 'DECJ') are presumed
to be J2000 coordinates.

  Pulsar names are presumed to be based on J2000 coordinates (that is,
readeaph ensures their names begin with 'J' by prepending a 'J' if
necessary), unless they begin with a 'B'.

  Values for period and time-derivatives of period in input files
are converted to frequency and time-derivative of frequency values,
to give the same number of frequency/period values (that is, if P, 
Pdot and PDDot are provided, then F, F1 and F2 are returned by
rd_eph). Errors are synthesised by presumption of a Gaussian error
distribution. 

  On input, parameters with values of zero and no error or 
error <= 0 are ignored (presumed unknown).
